# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#publishing-using-gradle

name: Gradle Package

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set environment variables # Set the release version env variable, based off of https://stackoverflow.com/questions/58177786/get-the-current-pushed-tag-in-github-actions
        run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10}) # Strip out the first 10 characters of "refs/tags/"
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew setupDecompWorkspace build -PCustomReleaseVersion=$RELEASE_VERSION

      # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
      # the publishing section of your build.gradle
      - name: Publish to GitHub Packages
        run: ./gradlew publish -PCustomReleaseVersion=$RELEASE_VERSION
        env:
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}